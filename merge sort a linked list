public static node mergeSort(node head) {
        if(head==null ||  head.next==null){
            return head;
            
        }node part1=null,part2=null;
        node slow=head,fast=head;
        while(fast.next!=null &&fast.next.next!=null){
            slow=slow.next;
            fast=fast.next.next;
        }part1=head;
        part2=slow.next;
        slow.next=null;
        
        node newp1=mergeSort(part1);
         node  newp2 =mergeSort(part2);
        
        
        node t1=newp1, t2=newp2;
        node head1=null;
        node tail=null;
        if(newp1==null){
            return newp2;
            
        }if(newp2==null){
            return newp1;
        }
        if(t1.data<=t2.data){
            head1=t1;
            tail=t1;
            t1=t1.next;
        }else{
            head1=t2;
            tail=t2;
            t2=t2.next;
        }while(t1!=null &&t2!=null){
            if(t1.data<=t2.data){
                tail.next=t1;
                tail=t1;
                t1=t1.next;
            }else{
               tail.next=t2;
                tail=t2;
                t2=t2.next; 
            }
           
        } if(t1!=null){
                tail.next=t1;
            }else{
                tail.next=t2;
            }
        return head1;
        
        
          
	}
