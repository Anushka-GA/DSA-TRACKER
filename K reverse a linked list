 static Node tt = null;
 static Node th = null;

    public static void addFirst(Node head) {
        if (th == null) {
            th = head;
            tt = head;
        } else {
            head.next = th;
            th = head;
        }
    }

    public static int length(Node head) {
        int len = 0;
        while (head != null) {
            head = head.next;
            len++;
        }
        return len;
    }

    public static Node reverseInKGroup(Node head, int k) {
        if (head == null || head.next == null || k <= 1)
            return head;

        int len = length(head);

        Node oh = null;
        Node ot = null;
        Node curr = head;

        while (curr != null && len >= k) {
            int tempK = k;
            while (tempK-- > 0) {
                Node forw = curr.next;

                curr.next = null;
                addFirst(curr);

                curr = forw;
            }

            len -= k;
            if (oh == null) {
                oh = th;
                ot = tt;
            } else {
                ot.next = th;
                ot = tt;
            }

            th = null;
            tt = null;
        }

        ot.next = curr;
        return oh;
    }
